using Microsoft.CodeAnalysis;
using Shouldly;
using Xunit;
using Xunit.Abstractions;

namespace DependenceyInjectionGeneratorTests
{
    public class TopLevelStatementsTests : BaseTest
    {
        public TopLevelStatementsTests(ITestOutputHelper output) : base(output, OutputKind.ConsoleApplication) { }

        [Fact]
        public void GeneratedCodeWithoutServicesWork()
        {
            var source = @"
using Microsoft.AspNetCore.Builder;
var builder = WebApplication.CreateBuilder(args);
builder.Services.AddServicesToDI();
";
            var (attributeCode, extensionCode) = GetGeneratedOutput(source);
            attributeCode.ShouldNotBeNull();
            extensionCode.ShouldNotBeNull();

            const string expectedAttributeCode = @"// <auto-generated />
[System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
internal class AddServiceAttribute : System.Attribute
{
}
";
            const string expectedExtensionCode = @"// <auto-generated />
using Microsoft.Extensions.DependencyInjection;

public static class GeneratedServicesExtension
{
    public static void AddServicesToDI(this IServiceCollection services)
    {
    }
}
";
            attributeCode.ShouldBe(expectedAttributeCode);
            extensionCode.ShouldBe(expectedExtensionCode);
        }
    }
}
